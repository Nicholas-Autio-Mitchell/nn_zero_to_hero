[project]
name = "nn-zero2hero"
version = "0.1.0"
description = "Working through Karpathy's video lecture series."
readme = "README.md"
requires-python = "~=3.9"
classifiers = [
    "Intended Audience :: Me",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
]

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'

[tool.mypy]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
explicit_package_bases = true
follow_imports = "silent"
ignore_missing_imports = true
namespace_packages = true
pretty = true
python_version = 3.9
show_error_codes = true
show_traceback = true
warn_return_any = true
warn_unused_configs = true

# Some things don't explicitly re-export symbols
[[tool.mypy.overrides]]
module = ["determined.*", "ruamel.*", "torch.*"]
implicit_reexport = true

[[tool.mypy.overrides]]
module = ["matplotlib.*", "numpy.*", "open3d.*", "pandas.*", "petastorm.*"]
ignore_missing_imports = true

[tool.ruff]
dummy-variable-rgx = "^(mock_.*|.*_mock|(cls|self|_.*))$"
ignore = [
    "A003",    # Class attribute is shadowing a python builtin
    "D104",    # Allow __init__ to not have a docstrings
    "D107",    # Allow __init__ to not have a docstrings
    "D202",    # No blank lines allowed after function docstring
    "D301",    # Use r”“” if any backslashes in a docstring
    "D401",    # First line should be in imperative mood
    "E731",    # Do not assign a lambda expression, use a def
    "E741",    # Ambiguous variable name (usually single letter vars)
    "N806",    # Allow lowercase function names
    "PIE796",  # Enum contains duplicate value
    "PLR2004", # Magic value used in comparison
]
line-length = 120
select = [
    "A",      # flake8-builtins
    "C4",     # flake8-comprehensions
    "C90",    # mccabe
    "D",      # pydocstyle
    "E",      # pycodestyle
    "ERA",    # eradicate (finds commented code)
    "F",      # pyflakes
    "G",      # flake8-logging-format
    "I",      # isort
    "N",      # pep8-naming
    "NPY001", # numpy-deprecated-type-alias
    "PIE",    # flake8-pie
    "PL",     # pylint
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RET",    # flake8-return
    "RSE",    # flake8-raise
    "RUF",    # ruff
    "SIM",    # flake8-simplify
    "T10",    # flake8-debugger
    "UP",     # pyupgrade
    "W",      # Warning
]
target-version = "py39"

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = [] # add to these as/when annoying cases emerge

[tool.ruff.isort]
no-lines-before = ["local-folder"]

[tool.ruff.mccabe]
max-complexity = 12

[tool.ruff.pydocstyle]
convention = "google"
